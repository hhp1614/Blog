<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>快速配置项目的 prettier 和 eslint</title>
    <link href="/2021/11/16/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84H5%E6%B8%B8%E6%88%8F%E7%9A%84JSSDK/"/>
    <url>/2021/11/16/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84H5%E6%B8%B8%E6%88%8F%E7%9A%84JSSDK/</url>
    
    <content type="html"><![CDATA[<h1 id="从零开发一个简单的-H5-游戏的-JS-SDK"><a href="#从零开发一个简单的-H5-游戏的-JS-SDK" class="headerlink" title="从零开发一个简单的 H5 游戏的 JS SDK"></a>从零开发一个简单的 H5 游戏的 JS SDK</h1><p>H5SDK 一般是由渠道方开发，提供登录、支付等服务给研发方使用</p><blockquote><p>本教程使用简单的 <code>HTML</code> + <code>JS</code> 实现，实际开发可使用 <code>webpack</code> 等构建工具搭建，好处就是可以集成一些工具链进去方便开发，比如 <code>Vue</code>、<code>Sass</code>。。。有空再写一篇使用 <code>webpack</code> 构建的吧</p></blockquote><h2 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h2><p>研发方提供一个游戏链接，在渠道方的页面上使用 <code>iframe</code> 加载，就像这样</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- index.html --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;game_frame&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./game.html&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p>研发方的页面需要引入渠道方提供的 SDK 文件，像这样</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- game.html --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./sdk.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p>这个 SDK 文件主要负责提供一些方法给研发方调用，研发方调用之后，会给父页面（也就是上面的 <code>index.html</code>）发送消息，然后在父页面内处理各种逻辑，完事之后再发送消息回来，研发方通过调用方法传入的回调函数（当然也可以使用 Promise 来实现）来收到父页面的处理的结果</p><blockquote><p>PS: 这里就是整个 SDK 最核心的部分了，主要是使用 <code>postMessage</code> 整个 API</p></blockquote><p>这里我们使用 <code>index.html</code> 表示渠道方的页面（也就是父页面），<code>game.html</code> 表示研发方的页面（也就是游戏页面），使用下面的目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs text">- index.html<br>- index.js<br>- sdk.js<br>- game.html<br></code></pre></div></td></tr></table></figure><h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><p>这是渠道方的页面，这里可以写登录、支付等界面</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;game_frame&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./game.html&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./index.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h2><p>我们先实现一下 <code>index.js</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">// 封装一下给 sdk.js 发送信息的方法</span><br><span class="hljs-keyword">const</span> postMsg = <span class="hljs-function">(<span class="hljs-params">action, data</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> gameFrame = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;game_frame&#x27;</span>);<br>    <span class="hljs-keyword">const</span> postData = &#123; action, data &#125;;<br>    <span class="hljs-keyword">if</span> (gameFrame.postMessage) &#123;<br>        gameFrame.postMessage(postData, <span class="hljs-string">&#x27;*&#x27;</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (gameFrame.contentWindow.postMessage) &#123;<br>        gameFrame.contentWindow.postMessage(postData, <span class="hljs-string">&#x27;*&#x27;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;数据发送失败：当前浏览器不支持 postMessage&#x27;</span>);<br>    &#125;<br>&#125;;<br><br><span class="hljs-comment">// 监听子页面传过来的信息</span><br><span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> ed = e.data;<br>    <span class="hljs-keyword">const</span> action = ed.action ? ed.action : <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">const</span> data = ed.data ? ed.data : &#123;&#125;;<br>    <span class="hljs-keyword">if</span> (!action) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">switch</span> (action) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;init&#x27;</span>:<br>            postMsg(<span class="hljs-string">&#x27;init&#x27;</span>, &#123; <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;初始化成功&#x27;</span> &#125;);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;login&#x27;</span>:<br>            postMsg(<span class="hljs-string">&#x27;login&#x27;</span>, &#123; <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;登录成功&#x27;</span> &#125;);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;pay&#x27;</span>:<br>            postMsg(<span class="hljs-string">&#x27;pay&#x27;</span>, &#123; <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;支付成功&#x27;</span> &#125;);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;);<br></code></pre></div></td></tr></table></figure><h2 id="sdk-js"><a href="#sdk-js" class="headerlink" title="sdk.js"></a>sdk.js</h2><p>下面我们开始写 <code>sdk.js</code> 文件，<code>sdk.js</code> 需要提供一个全局对象 SDK，对象内有 <code>init</code>，<code>login</code>，<code>pay</code> 三个方法</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">// 用于存储研发方传入的回调函数</span><br><span class="hljs-keyword">const</span> callbacks = &#123;&#125;;<br><span class="hljs-comment">// 简单封装一下 postMessage 这个方法</span><br><span class="hljs-keyword">const</span> postMsg = <span class="hljs-function">(<span class="hljs-params">action, data</span>) =&gt;</span> parent.postMessage(&#123; action, data &#125;, <span class="hljs-string">&#x27;*&#x27;</span>);<br><br><span class="hljs-comment">// 对外暴露 SDK 这个全局对象</span><br><span class="hljs-built_in">window</span>.SDK = &#123;<br>    <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params">params, callback</span>)</span> &#123;<br>        <span class="hljs-comment">// 将研发方传入的回调函数存起来</span><br>        callbacks.init = callback;<br>        <span class="hljs-comment">// 给父页面（index.html）发送信息</span><br>        postMsg(<span class="hljs-string">&#x27;init&#x27;</span>, params);<br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-title">login</span>(<span class="hljs-params">params, callback</span>)</span> &#123;<br>        callbacks.login = callback;<br>        postMsg(<span class="hljs-string">&#x27;login&#x27;</span>, params);<br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-title">pay</span>(<span class="hljs-params">params, callback</span>)</span> &#123;<br>        callbacks.pay = callback;<br>        postMsg(<span class="hljs-string">&#x27;pay&#x27;</span>, params);<br>    &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 接收父页面传过来的信息</span><br><span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> ed = e.data;<br>    <span class="hljs-keyword">const</span> action = ed.action ? ed.action : <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">const</span> data = ed.data ? ed.data : &#123;&#125;;<br>    <span class="hljs-comment">// 如果 action 不存在，就不做任何操作</span><br>    <span class="hljs-keyword">if</span> (!action) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">// 当父页面（index.html）传过来的 action 为下面这些时，执行研发方传入的回调函数，并把结果作为参数传进去，这样研发方就可以在回调函数那里取到父页面返回的结果了</span><br>    <span class="hljs-keyword">switch</span> (action) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;init&#x27;</span>:<br>            <span class="hljs-comment">// 初始化</span><br>            callbacks.init &amp;&amp; callbacks.init(data);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;login&#x27;</span>:<br>            <span class="hljs-comment">// 登录</span><br>            callbacks.login &amp;&amp; callbacks.login(data);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;pay&#x27;</span>:<br>            <span class="hljs-comment">// 支付</span><br>            callbacks.pay &amp;&amp; callbacks.pay(data);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;);<br></code></pre></div></td></tr></table></figure><h2 id="game-html"><a href="#game-html" class="headerlink" title="game.html"></a>game.html</h2><p>最后，这是研发方的页面，需要在页面引入 <code>sdk.js</code>，这个文件需要渠道方开发，然后调用这个文件里的方法</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./game.html&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./sdk.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-comment">// 这段代码用来测试，看到这应该明白，sdk.js 需要暴露 init，login，pay 三个方法出来供研发方调用</span></span><br><span class="javascript">    SDK.init(&#123; <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;测试调用初始化方法&#x27;</span> &#125;, <span class="hljs-function"><span class="hljs-params">initRes</span> =&gt;</span> &#123;</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;初始化结果&#x27;</span>, initRes); <span class="hljs-comment">// &#123; msg: &#x27;初始化成功&#x27; &#125;</span></span><br><span class="javascript"></span><br><span class="javascript">        SDK.login(&#123; <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;测试调用登录方法&#x27;</span> &#125;, <span class="hljs-function"><span class="hljs-params">loginRes</span> =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;登录结果&#x27;</span>, loginRes); <span class="hljs-comment">// &#123; msg: &#x27;登录成功&#x27; &#125;</span></span><br><span class="javascript"></span><br><span class="javascript">            SDK.pay(&#123; <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;测试调用支付方法&#x27;</span> &#125;, <span class="hljs-function"><span class="hljs-params">payRes</span> =&gt;</span> &#123;</span><br><span class="javascript">                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;支付结果&#x27;</span>, loginRes); <span class="hljs-comment">// &#123; msg: &#x27;支付成功&#x27; &#125;</span></span><br><span class="javascript">            &#125;);</span><br><span class="javascript">        &#125;);</span><br><span class="javascript">    &#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>JS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快速配置项目的 prettier 和 eslint</title>
    <link href="/2021/08/17/%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9B%AE%E7%9A%84prettier%E5%92%8Ceslint/"/>
    <url>/2021/08/17/%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9B%AE%E7%9A%84prettier%E5%92%8Ceslint/</url>
    
    <content type="html"><![CDATA[<h1 id="快速配置项目的-prettier-和-eslint"><a href="#快速配置项目的-prettier-和-eslint" class="headerlink" title="快速配置项目的 prettier 和 eslint"></a>快速配置项目的 prettier 和 eslint</h1><ul><li>prettier：代码格式化</li><li>eslint：代码检查</li></ul><h2 id="prettier-配置"><a href="#prettier-配置" class="headerlink" title="prettier 配置"></a><code>prettier</code> 配置</h2><p><a href="https://tools.hhp1614.top/tools/libs/prettier-config.html">@hhp-tools/prettier-config</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">npm i -D prettier @hhp-tools/prettier-config<br></code></pre></div></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>在 <code>package.json</code> 中配置</p><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;prettier&quot;</span>: <span class="hljs-string">&quot;@hhp-tools/prettier-config&quot;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="eslint-配置"><a href="#eslint-配置" class="headerlink" title="eslint 配置"></a><code>eslint</code> 配置</h2><p><a href="https://tools.hhp1614.top/tools/libs/eslint-config.html">@hhp-tools/eslint-config</a></p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">npm i -D eslint @hhp-tools/eslint-config<br></code></pre></div></td></tr></table></figure><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p>在 <code>package.json</code> 中配置</p><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;eslintConfig&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;extends&quot;</span>: [<br>            <span class="hljs-string">&quot;@hhp-tools/eslint-config&quot;</span><br>        ]<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>或者在 <code>.eslintrc.*</code> 中配置</p><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;extends&quot;</span>: <span class="hljs-string">&quot;@hhp-tools/eslint-config&quot;</span><br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
